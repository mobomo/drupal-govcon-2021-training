FROM alpine:3.12.3

# add all packages
RUN apk update && apk upgrade && apk add \
	apache2-proxy \
	apache2-ssl \
	php7-fpm \
	php7 \
	php7-opcache \
	php7-gd \
	php7-json \
	php7-phar \
	php7-iconv \
	php7-mbstring \
	php7-zlib \
	php7-curl \
	php7-session \
	php7-redis \
	php7-pdo_mysql \
	php7-tokenizer \
	php7-dom \
	php7-simplexml \
	php7-xml \
	php7-ctype \
	mysql-client \
	'memcached=~1.6' \
	'php7-pecl-memcache=~4.0' \
	curl \ 
	&& cp /usr/bin/php7 /usr/bin/php \
    && rm -f /var/cache/apk/* \
	&& rm -rf /etc/init.d/* \
    && addgroup -g 1000 -S http \
    && adduser -G http -u 1000 -s /bin/sh -D http \
	&& sed -rie 's|;error_log = log/php7/error.log|error_log = /dev/stdout|g' /etc/php7/php-fpm.conf 

# setup apache
COPY step1/docker/apache.conf /etc/apache2/httpd.conf
COPY step1/docker/php-pool.conf /etc/php7/php-fpm.d/www.conf
COPY step1/docker/php.ini /etc/php7/php.ini

# setup entrypoint file and apply execution rights
ADD step1/docker/entrypoint.sh /bootstrap/entrypoint.sh
ADD step1/docker/install-drupal.sh /bootstrap/install-drupal.sh

# Install Composer
RUN	curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer

# Install Drush
RUN composer global require drush/drush:~10 \
	&& composer clearcache \
	&& ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush

# Change to httpd user
USER http

# set workdir
WORKDIR /var/www/drupal

# Copy Drupal
COPY --chown=http:http drupal /var/www/drupal

# Run Composer Install
RUN cd /var/www/drupal && composer install

# Move settings.php
RUN cd /var/www/drupal && mv settings.php sites/default/

# Change to root user
USER root

# expose on port 80
EXPOSE 80

# send it
CMD ["/bootstrap/entrypoint.sh"]