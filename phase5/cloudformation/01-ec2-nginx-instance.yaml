AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  WebServerPublicDnsName:
    Description: Public DNSname address of Drupal Web Server
    Type: String
    
  WebServerPrivateIP:
    Description: Private IP address of Drupal Web Server
    Type: String
    
  DefaultSecurityGroupId:
    Description: ID of default security group in your VPC
    Type: String

Resources:
  IAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: nginx-role
      Description: "IAM Role applied to web servers"
      MaxSessionDuration: 3600
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: Allow-S3-Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - "s3:*"
                Resource: 
                  - "arn:aws:s3:::drupal-govcon-2021-assets"
                  - "arn:aws:s3:::drupal-govcon-2021-assets/*"
                  - "arn:aws:s3:::drupal-govcon-2021"
                  - "arn:aws:s3:::drupal-govcon-2021/*"

  IAMInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: nginx-role
      Path: "/"
      Roles:
        - Ref: "IAMRole"

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow web access directly to EC2 instance with public IP
      VpcId: vpc-709cea0d

  WebSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    DependsOn: WebSecurityGroup
    Properties:
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0
      FromPort: 80
      ToPort: 80
      GroupId: !GetAtt WebSecurityGroup.GroupId
      Description: Allow ingress on port 80

  DefaultSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    DependsOn: WebSecurityGroup
    Properties:
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref DefaultSecurityGroupId
      FromPort: 22
      ToPort: 22
      GroupId: !GetAtt WebSecurityGroup.GroupId
      Description: Allow SSH from default SG 

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      BlockDeviceMappings:
          -
            DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 20
              VolumeType: gp3
              DeleteOnTermination: true
      EbsOptimized: true
      IamInstanceProfile: !Ref IAMRole
      ImageId: ami-0c2b8ca1dad447f8a
      InstanceType: t3.small
      KeyName: cloud9
      SecurityGroupIds: 
        - !Ref WebSecurityGroup
        - !Ref DefaultSecurityGroupId
      SubnetId: subnet-1d426442
      Tags: 
        -
          Key: Name
          Value: Reverse Proxy
      UserData:
        !Base64 |
        #!/bin/sh -xe
        yum update -y && yum install -y docker git

        # Install docker-compose and setup docker
        service docker start
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        usermod -aG docker ec2-user
        ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
        
        # Setup app folder structure
        mkdir /var/app -p
        chown 1000:1000 /var/app
        
        # clone repo
        sudo -u "#1000" git clone https://github.com/mobomo/drupal-govcon-2021-training.git /var/app

        # download .env file
        aws s3 cp s3://drupal-govcon-2021/phase5.env /var/app/phase5/.env

        # Export environment variables
        set -a && source /var/app/phase5/.env && set +a

        # start nginx volume mounting configuration file from phase 5
        cd /var/app/phase5

        # start container
        docker-compose -f docker-compose-rproxy.yml up -d

  PublicWWWDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : Z01629752800X7928YLRP
      Name: www.govcon2021.mobomo.net
      ResourceRecords:
      - !GetAtt EC2Instance.PublicDnsName
      TTL: 60
      Type: CNAME

  PublicCMSDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : Z01629752800X7928YLRP
      Name: cms.govcon2021.mobomo.net
      ResourceRecords:
      - !Ref WebServerPublicDnsName
      TTL: 60
      Type: CNAME

  PrivateCMSDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : Z0038490QWCFHKK094DG
      Name: drupal.app.local
      ResourceRecords:
      - !Ref WebServerPrivateIP
      TTL: 60
      Type: A

Outputs:
  InstancePublicIP:
    Description: Public IP of Webserver
    Value: !GetAtt EC2Instance.PublicIp

  InstancePrivateIP:
    Description: Private IP of Webserver
    Value: !GetAtt EC2Instance.PrivateIp
    
  WebSecurityGroupID:
    Description: Security Group ID for Web SG that allows ingress on port 80 for webservers
    Value: !GetAtt WebSecurityGroup.GroupId