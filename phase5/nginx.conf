send_timeout 1800;
client_body_timeout 5s;
client_header_timeout 5s;
access_log off;
error_log /dev/stdout info;

log_format custom '$remote_addr - $remote_user [$time_local] '
		'"$request" $status 5xxhundred $body_bytes_sent '
		'"$http_referer" "$http_user_agent"';

proxy_cache_path  /var/cache/www levels=1:2 keys_zone=CACHE:10m max_size=512m inactive=24h;
proxy_temp_path   /var/cache/www-tmp 1 2;
proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";

map $request_uri $no_cache {
	default 0;
	~^/user|^/admin 1;
}

server {
	listen       80;
	resolver 169.254.169.253 valid=10s;
	server_name web;
	client_max_body_size 64m;
	proxy_set_header X-Client-IP $http_x_client_ip;
	proxy_set_header X-Forwarded-For $http_x_forwarded_for;
	proxy_read_timeout 1800;
	proxy_cache CACHE;
	proxy_cache_valid 200 301 302 1m;
	proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
	proxy_cache_revalidate on;
	proxy_cache_lock on;
	proxy_pass_header Authorization;
	expires $upstream_http_expires;
	add_header X-Proxy-Cache $upstream_cache_status;
	add_header X-Upstream-Expires $upstream_http_expires;
	add_header X-Upstream-Cache-Control $upstream_http_cache_control;
	add_header X-NoCache $no_cache;
	add_header X-UA-Compatible IE=Edge;
	add_header X-Client-IP $http_x_client_ip;
	add_header X-Forwarded-For $http_x_forwarded_for;
	sendfile on;
	tcp_nodelay on;
	tcp_nopush on;

	location / {
		proxy_pass ${NGINX_UPSTREAM_HOST};
		proxy_connect_timeout 5s;
#		proxy_ignore_headers Expires;
#		proxy_intercept_errors on;
#		error_page 500 501 502 503 504 = @five_hundred_error;
	}

	location ~ ^/file/ajax/upload/ {
		proxy_request_buffering off;
		proxy_pass ${NGINX_UPSTREAM_HOST};
	}

#	location /nc.html {
#		return 200 '<html><head></head><body>ok</body></html>';
#	}

	location ~ gulpfile.js$|package.json$|cron.php$|install.php$|update.php$ {
		deny all;
	}

#	location @five_hundred_error {
#		access_log /dev/stdout custom;
#		root /var/www/html;
#		try_files /index.html /index.html;
#	}

}

